[tool.poetry]
name = "languageassistant"
version = "0.1.0"
description = "An LLM-powered language learning assistant"
authors = [
    "Daniel Gleaves <daniel@dagleaves.com>",
]
license = "MIT"
readme = "README.md"

documentation = "https://dagleaves.github.io/languageassistant"
homepage = "https://dagleaves.github.io/languageassistant"
repository = "https://github.com/dagleaves/languageassistant"

classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Typing :: Typed",
]

packages = [
    { include = "languageassistant"}
]

[tool.poetry.dependencies]
python = ">=3.9, <3.11"
langchain = "^0.0.162"
openai = "^0.27.6"
toml = "^0.10.2"
speechrecognition = "^3.10.0"
pyaudio = "^0.2.13"
faiss-cpu = "^1.7.4"
lark = "^1.1.5"
tiktoken = "^0.4.0"
questionary = "^1.10.0"
google-cloud-texttospeech = "^2.14.1"
pydub = "^0.25.1"

[tool.poetry.group.dev.dependencies]
autodoc-pydantic = "^1.8.0"
autoflake = "*"
black = "*"
flake8 = "*"
flake8-bugbear = "*"
flake8-builtins = "*"
flake8-comprehensions = "*"
flake8-debugger = "*"
flake8-eradicate = "*"
flake8-logging-format = "*"
ipython = "^8.14.0"
isort = "*"
mypy = "*"
pep8-naming = "*"
poetry-dotenv-plugin = "^0.1.0"
pre-commit = "*"
pymdown-extensions = "*"
pytest = "*"
pytest-github-actions-annotate-failures = "*"
pytest-cov = "*"
python-kacl = "*"
pyupgrade = "*"
sphinx-copybutton = "^0.5.2"
tryceratops = "*"
sphinx-book-theme = "^1.0.1"
types-toml = "^0.10.8.6"
myst-parser = "^2.0.0"
ipykernel = "^6.23.2"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile = "black"
src_paths = ["languageassistant", "tests"]

[tool.black]
target-version = ["py37", "py38", "py39"]
include = '\.pyi?$'

[tool.pytest.ini_options]
addopts = """\
    --cov languageassistant \
    --cov tests \
    --cov-report term-missing \
    --no-cov-on-fail \
    --cov-fail-under=0
"""

[tool.coverage.report]
fail_under = 100
exclude_lines = [
    'if TYPE_CHECKING:',
    'pragma: no cover'
]
[tool.mypy]
ignore_missing_imports = true
disallow_untyped_defs = true
no_implicit_optional = true
strict_equality = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_return_any = true
check_untyped_defs = true
show_error_codes = true

[tool.tryceratops]
ignore = ["TRY003"]
